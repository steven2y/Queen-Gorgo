// Generated by CoffeeScript 1.4.0
(function() {
  var Display, DisplayRowView, PhotoList, PictureControl;

  Display = Backbone.Model.extend({
    initialize: function(id, options) {
      this.socket = options.socket;
      return this.bind("change", function(model) {
        console.log("change");
        console.log(model.toJSON());
        return this.socket.emit("controlShowDisplay", model.toJSON());
      });
    }
  });

  DisplayRowView = Backbone.View.extend({
    initialize: function() {
      this.render();
      return this.model.on("change", this.refreshFromModel, this);
    },
    templateRow: "<tr><td>{{timestamp}}</td><td><input class='message' type='text' value='{{message}}'/></td><td>{{height}}x{{width}} (px)</td></tr>",
    render: function() {
      this.row = $(_.template(this.templateRow, this.model.toJSON()));
      this.inputMessage = this.row.find("input.message");
      this.inputMessage.on("change", _.bind(this.updateMessageModel, this));
      this.$el.append(this.row);
      return this;
    },
    updateMessageModel: function(e) {
      var value;
      value = $(e.target).val();
      return this.model.set({
        'message': value
      });
    },
    refreshFromModel: function() {
      this.inputMessage.val(this.model.get('message'));
      return console.log('refresh');
    }
  });

  PhotoList = (function() {

    function PhotoList(ul) {
      this.ul = ul;
      this.photos = [];
      _.extend(this, Backbone.Events);
    }

    PhotoList.prototype.templatePhoto = "<li class='span1'>                <a class='thumbnail' href='#'>                 <image src='{{src}}' />                </a>                </li>";

    PhotoList.prototype.update = function(list) {
      var photo, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = list.length; _i < _len; _i++) {
        photo = list[_i];
        if (jQuery.inArray(photo, this.photos) === -1) {
          this.photos.push(photo);
          _results.push(this.showPhoto(photo));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    PhotoList.prototype.showPhoto = function(photoPath) {
      var photo, src;
      src = photoPath;
      photo = $(_.template(this.templatePhoto, {
        src: src
      }));
      $(photo).find("a.thumbnail").click(_.bind(function(e) {
        console.log(src);
        return this.trigger("imgClick", src);
      }, this));
      return this.ul.append(photo);
    };

    return PhotoList;

  })();

  PictureControl = (function() {

    PictureControl.prototype.image = '';

    function PictureControl(div) {
      this.div = div;
    }

    PictureControl.prototype.templateImage = "<image src='{{src}}' /> <p>{{height}}x{{width}}(px)</p>";

    PictureControl.prototype.loadImage = function(src) {
      this.src = src;
      this.image = new Image();
      $(this.image).load(_.bind(function() {
        var newImage;
        $(this.div).empty();
        newImage = $(_.template(this.templateImage, {
          src: src,
          height: this.image.height,
          width: this.image.width
        }));
        return this.div.append(newImage);
      }, this));
      return this.image.src = src;
    };

    PictureControl.prototype.getImageHeight = function() {
      return this.image.height;
    };

    PictureControl.prototype.getImageWidth = function() {
      return this.image.width;
    };

    return PictureControl;

  })();

  $(document).ready(function() {
    var app, photoList, pictureControl, _log, _s_log;
    photoList = new PhotoList($('ul#imageList'));
    pictureControl = new PictureControl($('div#loadedPicture'));
    photoList.bind('imgClick', function(src) {
      console.log(src);
      return pictureControl.loadImage(src);
    });
    _.templateSettings = {
      interpolate: /\{\{(.+?)\}\}/g
    };
    app = {};
    app.models = [];
    app.server = io.connect("/");
    console.log("Loading");
    _log = function(message) {
      return console.log(message);
    };
    _s_log = function(o) {
      return console.log(JSON.stringify(o));
    };
    app.showDisplay = function(message) {
      var _this = this;
      _log(message);
      $("table#displayList").empty();
      return $.each(message, function(key, display) {
        var model;
        model = new Display(display, {
          socket: app.server
        });
        app.models.push(model);
        return new DisplayRowView({
          model: model,
          el: $("table#displayList")
        });
      });
    };
    app.updatePhotoList = function(message) {
      _log(message);
      return photoList.update(message);
    };
    app.server.on("connect", function() {
      return _log("Connected to the server" + arguments);
    });
    app.server.emit("controlRegister");
    app.server.on("showDisplayList", app.showDisplay);
    app.server.on("updatePhotoList", app.updatePhotoList);
    app.server.on("message", function(data) {
      return _log("Received message: " + data.message);
    });
    return window.app = app;
  });

}).call(this);
